// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hiastHRApi.Repository;

#nullable disable

namespace hiastHRApi.Repository.Migrations
{
    [DbContext(typeof(HrmappContext))]
    partial class HrmappContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.BloodGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("BloodGroups");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<Guid>("OrgDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex(new[] { "OrgDepartmentId" }, "IX_Branches_OrgDepartmentId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.ChildStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("ChildStatuses");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CountryId" }, "IX_Cities_CountryId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "IsDeleted")
                        .IsUnique();

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.DegreesAuthority", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("DegreesAuthorities");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.DeputationObjective", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("DeputationObjectives");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.DeputationStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("DeputationStatuses");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.DeputationType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("DeputationTypes");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.DisabilityType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("DisabilityTypes");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.DocType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("DocTypes");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.EmploymentStatusType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("EmploymentStatusTypes");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.EvaluationGrade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("EvaluationGrades");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.EvaluationQuarter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("EvaluationQuarters");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.ExperienceType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("ExperienceTypes");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.FinancialImpact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("FinancialImpacts");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.FinancialIndicatorType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("FinancialIndicatorTypes");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.ForcedVacationType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("ForcedVacationTypes");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Gender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.HealthyStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("HealthyStatuses");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.InsuranceSystem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("InsuranceSystems");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.JobCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("JobCategories");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.JobChangeReason", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModificationContractTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ModificationContractTypeId" }, "IX_JobChangeReasons_ModificationContractTypeId");

                    b.ToTable("JobChangeReasons");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.JobTitle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("JobTitles");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.LanguageLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("LanguageLevels");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Law", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("Laws");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.MaritalStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("MaritalStatuses");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.MilitaryRank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("MilitaryRanks");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.MilitarySpecialization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("MilitarySpecializations");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.ModificationContractType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("ModificationContractTypes");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Nationality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("Nationalities");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.OccurrencePartnerType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("OccurrencePartnerTypes");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.OrgDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ParentId" }, "IX_OrgDepartments_ParentId");

                    b.ToTable("OrgDepartments");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.PromotionPercentage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("PromotionPercentages");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.PunishmentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FinancialImpactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "FinancialImpactId" }, "IX_PunishmentTypes_FinancialImpactId");

                    b.ToTable("PunishmentTypes");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Qualification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("Qualifications");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.RelinquishmentReason", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("RelinquishmentReasons");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.RewardType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("RewardTypes");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Specialization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<Guid>("QualificationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "QualificationId" }, "IX_Specializations_QualificationId");

                    b.ToTable("Specializations");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.StartingType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("StartingTypes");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.SubDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DepartmentId" }, "IX_SubDepartments_DepartmentId");

                    b.ToTable("SubDepartments");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.TerminationReason", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("TerminationReasons");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.University", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.VacationType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.ToTable("VacationTypes");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpAppointmentStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AppointmenContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("AppointmentContractTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AppointmentContractVisaNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfAppointmentDecision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfAppointmentVisa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfInsuranceStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfModifiedAppointmentVisaDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DisabilityTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngineersSyndicateNumber")
                        .HasColumnType("int");

                    b.Property<int>("GeneralRegistryNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("HealthyStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InsuranceNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("InsuranceSystemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("JobCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LawId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModificationContractTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedAppointmentContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<Guid>("StartingTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AppointmentContractTypeId" }, "IX_EmpAppointmentStatuses_AppointmentContractTypeId");

                    b.HasIndex(new[] { "DisabilityTypeId" }, "IX_EmpAppointmentStatuses_DisabilityTypeId");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpAppointmentStatuses_EmployeeId");

                    b.HasIndex(new[] { "HealthyStatusId" }, "IX_EmpAppointmentStatuses_HealthyStatusId");

                    b.HasIndex(new[] { "InsuranceSystemId" }, "IX_EmpAppointmentStatuses_InsuranceSystemId");

                    b.HasIndex(new[] { "JobCategoryId" }, "IX_EmpAppointmentStatuses_JobCategoryId");

                    b.HasIndex(new[] { "LawId" }, "IX_EmpAppointmentStatuses_LawId");

                    b.HasIndex(new[] { "ModificationContractTypeId" }, "IX_EmpAppointmentStatuses_ModificationContractTypeId");

                    b.HasIndex(new[] { "StartingTypeId" }, "IX_EmpAppointmentStatuses_StartingTypeId");

                    b.ToTable("EmpAppointmentStatuses");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssignedWork")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ContractTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ContractTypeId" }, "IX_EmpAssignments_ContractTypeId");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpAssignments_EmployeeId");

                    b.ToTable("EmpAssignments");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpChild", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ChildOrder")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<string>("OccurrenceContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("OccurrenceDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpChildren_EmployeeId");

                    b.HasIndex(new[] { "GenderId" }, "IX_EmpChildren_GenderId");

                    b.HasIndex(new[] { "StatusId" }, "IX_EmpChildren_StatusId");

                    b.ToTable("EmpChildren");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpDeputation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssignedEntity")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeputationDecisionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeputationDecisionNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("DeputationObjectiveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeputationReason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("DeputationStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeputationTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExecutiveContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExecutiveContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<string>("RequiredSpecialization")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartAfterReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UniversityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CityId" }, "IX_EmpDeputations_CityId");

                    b.HasIndex(new[] { "CountryId" }, "IX_EmpDeputations_CountryId");

                    b.HasIndex(new[] { "DeputationObjectiveId" }, "IX_EmpDeputations_DeputationObjectiveId");

                    b.HasIndex(new[] { "DeputationStatusId" }, "IX_EmpDeputations_DeputationStatusId");

                    b.HasIndex(new[] { "DeputationTypeId" }, "IX_EmpDeputations_DeputationTypeId");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpDeputations_EmployeeId");

                    b.HasIndex(new[] { "UniversityId" }, "IX_EmpDeputations_UniversityId");

                    b.ToTable("EmpDeputations");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpDoc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocSrc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DocTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RefId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DocTypeId" }, "IX_EmpDocs_DocTypeId");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpDocs_EmployeeId");

                    b.ToTable("EmpDoc");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpEmploymentChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfAppointmentVisa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfChange")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfContract")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfStart")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InsuranceSalary")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("JobChangeReasonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JobTitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModificationContractTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("VisaNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Workplace")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpEmploymentChanges_EmployeeId");

                    b.HasIndex(new[] { "JobChangeReasonId" }, "IX_EmpEmploymentChanges_JobChangeReasonId");

                    b.HasIndex(new[] { "JobTitleId" }, "IX_EmpEmploymentChanges_JobTitleId");

                    b.HasIndex(new[] { "ModificationContractTypeId" }, "IX_EmpEmploymentChanges_ModificationContractTypeId");

                    b.ToTable("EmpEmploymentChanges");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpEmploymentStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ContractTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StartingTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ContractTypeId" }, "IX_EmpEmploymentStatuses_ContractTypeId");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpEmploymentStatuses_EmployeeId");

                    b.HasIndex(new[] { "StartingTypeId" }, "IX_EmpEmploymentStatuses_StartingTypeId");

                    b.ToTable("EmpEmploymentStatuses");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpExperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExperienceTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpExperiences_EmployeeId");

                    b.HasIndex(new[] { "ExperienceTypeId" }, "IX_EmpExperiences_ExperienceTypeId");

                    b.ToTable("EmpExperiences");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpLanguage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayOnRecordCard")
                        .HasColumnType("bit");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LanguageLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpLanguages_EmployeeId");

                    b.HasIndex(new[] { "LanguageId" }, "IX_EmpLanguages_LanguageId");

                    b.HasIndex(new[] { "LanguageLevelId" }, "IX_EmpLanguages_LanguageLevelId");

                    b.ToTable("EmpLanguages");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpMilitaryService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CohortNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MilitaryNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("MilitaryRankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MilitarySpecializationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<string>("RecruitmentBranch")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RecruitmentNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReserveNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpMilitaryServices_EmployeeId");

                    b.HasIndex(new[] { "MilitaryRankId" }, "IX_EmpMilitaryServices_MilitaryRankId");

                    b.HasIndex(new[] { "MilitarySpecializationId" }, "IX_EmpMilitaryServices_MilitarySpecializationId");

                    b.ToTable("EmpMilitaryServices");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpMilitaryServiceCohort", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EndContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<DateTime>("StartContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StartContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpMilitaryServiceCohorts_EmployeeId");

                    b.ToTable("EmpMilitaryServiceCohorts");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpMilitaryServiceSuspension", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<DateTime>("ReturnContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReturnContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ReturnToServiceDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SuspensionContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SuspensionContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("SuspensionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpMilitaryServiceSuspensions_EmployeeId");

                    b.ToTable("EmpMilitaryServiceSuspensions");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpPartner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("NationalityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<string>("OccurrenceContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("OccurrenceDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OccurrenceTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PartnerOrder")
                        .HasColumnType("int");

                    b.Property<Guid>("PartnerWorkId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpPartners_EmployeeId");

                    b.HasIndex(new[] { "GenderId" }, "IX_EmpPartners_GenderId");

                    b.HasIndex(new[] { "NationalityId" }, "IX_EmpPartners_NationalityId");

                    b.HasIndex(new[] { "OccurrenceTypeId" }, "IX_EmpPartners_OccurrenceTypeId");

                    b.HasIndex(new[] { "PartnerWorkId" }, "IX_EmpPartners_PartnerWorkId");

                    b.ToTable("EmpPartners");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpPerformanceEvaluation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EvaluationGradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EvaluationQuarterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<DateTime>("PromotionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpPerformanceEvaluations_EmployeeId");

                    b.HasIndex(new[] { "EvaluationGradeId" }, "IX_EmpPerformanceEvaluations_EvaluationGradeId");

                    b.HasIndex(new[] { "EvaluationQuarterId" }, "IX_EmpPerformanceEvaluations_EvaluationQuarterId");

                    b.ToTable("EmpPerformanceEvaluations");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("BloodGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CivilRegistry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("EmploymentStatusTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FamilyBookDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FamilyBookNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Idnumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IDNumber");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("MaritalStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NationalNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("NationalityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<string>("PersonalNum")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RegistrationNumber")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationPlaceAndNumber")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BloodGroupId" }, "IX_EmpPersonalInfos_BloodGroupId");

                    b.HasIndex(new[] { "CityId" }, "IX_EmpPersonalInfos_CityId");

                    b.HasIndex(new[] { "EmploymentStatusTypeId" }, "IX_EmpPersonalInfos_EmploymentStatusTypeId");

                    b.HasIndex(new[] { "GenderId" }, "IX_EmpPersonalInfos_GenderId");

                    b.HasIndex(new[] { "MaritalStatusId" }, "IX_EmpPersonalInfos_MaritalStatusId");

                    b.HasIndex(new[] { "NationalityId" }, "IX_EmpPersonalInfos_NationalityId");

                    b.ToTable("EmpPersonalInfos");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpPromotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BonusAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EvaluationGradeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("NewSalary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<DateTime>("PromotionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PromotionDuration")
                        .HasColumnType("int");

                    b.Property<Guid>("PromotionPercentageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpPromotions_EmployeeId");

                    b.HasIndex(new[] { "EvaluationGradeId" }, "IX_EmpPromotions_EvaluationGradeId");

                    b.HasIndex(new[] { "PromotionPercentageId" }, "IX_EmpPromotions_PromotionPercentageId");

                    b.ToTable("EmpPromotions");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpPunishment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ContractTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DurationInDays")
                        .HasColumnType("int");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExecutionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAppearingInRecordCard")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPercentage")
                        .HasColumnType("bit");

                    b.Property<Guid>("IssuingOrgDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<string>("OrderContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderOrgDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PercentageOrAmount")
                        .HasColumnType("int");

                    b.Property<Guid>("PunishmentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ContractTypeId" }, "IX_EmpPunishments_ContractTypeId");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpPunishments_EmployeeId");

                    b.HasIndex(new[] { "IssuingOrgDepartmentId" }, "IX_EmpPunishments_IssuingOrgDepartmentId");

                    b.HasIndex(new[] { "OrderOrgDepartmentId" }, "IX_EmpPunishments_OrderOrgDepartmentId");

                    b.HasIndex(new[] { "PunishmentTypeId" }, "IX_EmpPunishments_PunishmentTypeId");

                    b.ToTable("EmpPunishments");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpQualification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DegreeDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DegreesAuthorityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EquivalenceContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("EquivalenceDegreeContractDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<Guid>("QualificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SpecializationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubSpecialization")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CountryId" }, "IX_EmpQualifications_CountryId");

                    b.HasIndex(new[] { "DegreesAuthorityId" }, "IX_EmpQualifications_DegreesAuthorityId");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpQualifications_EmployeeId");

                    b.HasIndex(new[] { "QualificationId" }, "IX_EmpQualifications_QualificationId");

                    b.HasIndex(new[] { "SpecializationId" }, "IX_EmpQualifications_SpecializationId");

                    b.ToTable("EmpQualifications");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpRelinquishment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ContractTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<DateTime>("RelinquishmentDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RelinquishmentReasonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ContractTypeId" }, "IX_EmpRelinquishments_ContractTypeId");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpRelinquishments_EmployeeId");

                    b.HasIndex(new[] { "RelinquishmentReasonId" }, "IX_EmpRelinquishments_RelinquishmentReasonId");

                    b.ToTable("EmpRelinquishments");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpReward", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ContractTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DurationInDays")
                        .HasColumnType("int");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExecutionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FinancialIndicatorTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("OrgDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PercentageOrAmount")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("RewardTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ContractTypeId" }, "IX_EmpRewards_ContractTypeId");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpRewards_EmployeeId");

                    b.HasIndex(new[] { "FinancialIndicatorTypeId" }, "IX_EmpRewards_FinancialIndicatorTypeId");

                    b.HasIndex(new[] { "OrgDepartmentId" }, "IX_EmpRewards_OrgDepartmentId");

                    b.HasIndex(new[] { "RewardTypeId" }, "IX_EmpRewards_RewardTypeId");

                    b.ToTable("EmpRewards");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpTrainingCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ContractTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CourseSource")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayOnRecordCard")
                        .HasColumnType("bit");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ContractTypeId" }, "IX_EmpTrainingCourses_ContractTypeId");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpTrainingCourses_EmployeeId");

                    b.ToTable("EmpTrainingCourses");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpVacation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActualReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ContractTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DurationInDays")
                        .HasColumnType("int");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FinancialImpactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ForcedVacationTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAppearingInRecordCard")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIncludedInServiceDuration")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModificationContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificationContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ModificationContractTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VacationTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VacationYear")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ContractTypeId" }, "IX_EmpVacations_ContractTypeId");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpVacations_EmployeeId");

                    b.HasIndex(new[] { "FinancialImpactId" }, "IX_EmpVacations_FinancialImpactId");

                    b.HasIndex(new[] { "ForcedVacationTypeId" }, "IX_EmpVacations_ForcedVacationTypeId");

                    b.HasIndex(new[] { "ModificationContractTypeId" }, "IX_EmpVacations_ModificationContractTypeId");

                    b.HasIndex(new[] { "VacationTypeId" }, "IX_EmpVacations_VacationTypeId");

                    b.ToTable("EmpVacations");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpWorkInjury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DisabilityRatio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InjuryType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("LumpSumAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MonthlyAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpWorkInjuries_EmployeeId");

                    b.ToTable("EmpWorkInjuries");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpWorkPlace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("ContractTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfContract")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfRelinquishment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfStart")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ContractTypeId" }, "IX_EmpWorkPlaces_ContractTypeId");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmpWorkPlaces_EmployeeId");

                    b.ToTable("EmpWorkPlaces");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Identity.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ORDER")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NAME", "IsDeleted");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Identity.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "IsDeleted")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Identity.RolePermissions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId", "PermissionId", "IsDeleted");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Identity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NationalNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.HasIndex("Email", "IsDeleted")
                        .IsUnique();

                    b.HasIndex("Mobile", "IsDeleted")
                        .IsUnique();

                    b.HasIndex("NationalNumber", "IsDeleted")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Identity.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("BirthDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("'1900-01-01'");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PersonalCardNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "IsDeleted")
                        .IsUnique();

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Branch", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.OrgDepartment", "OrgDepartment")
                        .WithMany("Branches")
                        .HasForeignKey("OrgDepartmentId")
                        .IsRequired();

                    b.Navigation("OrgDepartment");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.City", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.JobChangeReason", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.ModificationContractType", "ModificationContractType")
                        .WithMany("JobChangeReasons")
                        .HasForeignKey("ModificationContractTypeId")
                        .IsRequired();

                    b.Navigation("ModificationContractType");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.OrgDepartment", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.OrgDepartment", "Parent")
                        .WithMany("SubOrgDepartments")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.PunishmentType", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.FinancialImpact", "FinancialImpact")
                        .WithMany("PunishmentTypes")
                        .HasForeignKey("FinancialImpactId")
                        .IsRequired();

                    b.Navigation("FinancialImpact");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Specialization", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.Qualification", "Qualification")
                        .WithMany("Specializations")
                        .HasForeignKey("QualificationId")
                        .IsRequired();

                    b.Navigation("Qualification");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.SubDepartment", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.Department", "Department")
                        .WithMany("SubDepartments")
                        .HasForeignKey("DepartmentId")
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpAppointmentStatus", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.ModificationContractType", "AppointmentContractType")
                        .WithMany("EmpAppointmentStatusAppointmentContractTypes")
                        .HasForeignKey("AppointmentContractTypeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.DisabilityType", "DisabilityType")
                        .WithMany("EmpAppointmentStatuses")
                        .HasForeignKey("DisabilityTypeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpAppointmentStatuses")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.HealthyStatus", "HealthyStatus")
                        .WithMany("EmpAppointmentStatuses")
                        .HasForeignKey("HealthyStatusId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.InsuranceSystem", "InsuranceSystem")
                        .WithMany("EmpAppointmentStatuses")
                        .HasForeignKey("InsuranceSystemId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.JobCategory", "JobCategory")
                        .WithMany("EmpAppointmentStatuses")
                        .HasForeignKey("JobCategoryId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.Law", "Law")
                        .WithMany("EmpAppointmentStatuses")
                        .HasForeignKey("LawId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.ModificationContractType", "ModificationContractType")
                        .WithMany("EmpAppointmentStatusModificationContractTypes")
                        .HasForeignKey("ModificationContractTypeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.StartingType", "StartingType")
                        .WithMany("EmpAppointmentStatuses")
                        .HasForeignKey("StartingTypeId")
                        .IsRequired();

                    b.Navigation("AppointmentContractType");

                    b.Navigation("DisabilityType");

                    b.Navigation("Employee");

                    b.Navigation("HealthyStatus");

                    b.Navigation("InsuranceSystem");

                    b.Navigation("JobCategory");

                    b.Navigation("Law");

                    b.Navigation("ModificationContractType");

                    b.Navigation("StartingType");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpAssignment", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.ModificationContractType", "ContractType")
                        .WithMany("EmpAssignments")
                        .HasForeignKey("ContractTypeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpAssignments")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.Navigation("ContractType");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpChild", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpChildren")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.Gender", "Gender")
                        .WithMany("EmpChildren")
                        .HasForeignKey("GenderId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.ChildStatus", "Status")
                        .WithMany("EmpChildren")
                        .HasForeignKey("StatusId")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Gender");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpDeputation", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.City", "City")
                        .WithMany("EmpDeputations")
                        .HasForeignKey("CityId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.Country", "Country")
                        .WithMany("EmpDeputations")
                        .HasForeignKey("CountryId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.DeputationObjective", "DeputationObjective")
                        .WithMany("EmpDeputations")
                        .HasForeignKey("DeputationObjectiveId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.DeputationStatus", "DeputationStatus")
                        .WithMany("EmpDeputations")
                        .HasForeignKey("DeputationStatusId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.DeputationType", "DeputationType")
                        .WithMany("EmpDeputations")
                        .HasForeignKey("DeputationTypeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpDeputations")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.University", "University")
                        .WithMany("EmpDeputations")
                        .HasForeignKey("UniversityId")
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("DeputationObjective");

                    b.Navigation("DeputationStatus");

                    b.Navigation("DeputationType");

                    b.Navigation("Employee");

                    b.Navigation("University");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpDoc", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.DocType", "DocType")
                        .WithMany("EmpDocs")
                        .HasForeignKey("DocTypeId")
                        .IsRequired();

                    b.Navigation("DocType");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpEmploymentChange", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpEmploymentChanges")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.JobChangeReason", "JobChangeReason")
                        .WithMany("EmpEmploymentChanges")
                        .HasForeignKey("JobChangeReasonId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.JobTitle", "JobTitle")
                        .WithMany("EmpEmploymentChanges")
                        .HasForeignKey("JobTitleId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.ModificationContractType", "ModificationContractType")
                        .WithMany("EmpEmploymentChanges")
                        .HasForeignKey("ModificationContractTypeId")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("JobChangeReason");

                    b.Navigation("JobTitle");

                    b.Navigation("ModificationContractType");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpEmploymentStatus", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.ModificationContractType", "ContractType")
                        .WithMany("EmpEmploymentStatuses")
                        .HasForeignKey("ContractTypeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpEmploymentStatuses")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.StartingType", "StartingType")
                        .WithMany("EmpEmploymentStatuses")
                        .HasForeignKey("StartingTypeId")
                        .IsRequired();

                    b.Navigation("ContractType");

                    b.Navigation("Employee");

                    b.Navigation("StartingType");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpExperience", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpExperiences")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.ExperienceType", "ExperienceType")
                        .WithMany("EmpExperiences")
                        .HasForeignKey("ExperienceTypeId")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("ExperienceType");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpLanguage", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpLanguages")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.Language", "Language")
                        .WithMany("EmpLanguages")
                        .HasForeignKey("LanguageId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.LanguageLevel", "LanguageLevel")
                        .WithMany("EmpLanguages")
                        .HasForeignKey("LanguageLevelId")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Language");

                    b.Navigation("LanguageLevel");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpMilitaryService", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpMilitaryServices")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.MilitaryRank", "MilitaryRank")
                        .WithMany("EmpMilitaryServices")
                        .HasForeignKey("MilitaryRankId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.MilitarySpecialization", "MilitarySpecialization")
                        .WithMany("EmpMilitaryServices")
                        .HasForeignKey("MilitarySpecializationId")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("MilitaryRank");

                    b.Navigation("MilitarySpecialization");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpMilitaryServiceCohort", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpMilitaryServiceCohorts")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpMilitaryServiceSuspension", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpMilitaryServiceSuspensions")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpPartner", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpPartners")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.Gender", "Gender")
                        .WithMany("EmpPartners")
                        .HasForeignKey("GenderId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.Nationality", "Nationality")
                        .WithMany("EmpPartners")
                        .HasForeignKey("NationalityId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.OccurrencePartnerType", "OccurrenceType")
                        .WithMany("EmpPartners")
                        .HasForeignKey("OccurrenceTypeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.JobTitle", "PartnerWork")
                        .WithMany("EmpPartners")
                        .HasForeignKey("PartnerWorkId")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Gender");

                    b.Navigation("Nationality");

                    b.Navigation("OccurrenceType");

                    b.Navigation("PartnerWork");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpPerformanceEvaluation", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpPerformanceEvaluations")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.EvaluationGrade", "EvaluationGrade")
                        .WithMany("EmpPerformanceEvaluations")
                        .HasForeignKey("EvaluationGradeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.EvaluationQuarter", "EvaluationQuarter")
                        .WithMany("EmpPerformanceEvaluations")
                        .HasForeignKey("EvaluationQuarterId")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("EvaluationGrade");

                    b.Navigation("EvaluationQuarter");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.BloodGroup", "BloodGroup")
                        .WithMany("EmpPersonalInfos")
                        .HasForeignKey("BloodGroupId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.City", "City")
                        .WithMany("EmpPersonalInfos")
                        .HasForeignKey("CityId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.EmploymentStatusType", "EmploymentStatusType")
                        .WithMany("EmpPersonalInfos")
                        .HasForeignKey("EmploymentStatusTypeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.Gender", "Gender")
                        .WithMany("EmpPersonalInfos")
                        .HasForeignKey("GenderId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.MaritalStatus", "MaritalStatus")
                        .WithMany("EmpPersonalInfos")
                        .HasForeignKey("MaritalStatusId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.Nationality", "Nationality")
                        .WithMany("EmpPersonalInfos")
                        .HasForeignKey("NationalityId")
                        .IsRequired();

                    b.Navigation("BloodGroup");

                    b.Navigation("City");

                    b.Navigation("EmploymentStatusType");

                    b.Navigation("Gender");

                    b.Navigation("MaritalStatus");

                    b.Navigation("Nationality");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpPromotion", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpPromotions")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.EvaluationGrade", "EvaluationGrade")
                        .WithMany("EmpPromotions")
                        .HasForeignKey("EvaluationGradeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.PromotionPercentage", "PromotionPercentage")
                        .WithMany("EmpPromotions")
                        .HasForeignKey("PromotionPercentageId")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("EvaluationGrade");

                    b.Navigation("PromotionPercentage");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpPunishment", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.ModificationContractType", "ContractType")
                        .WithMany("EmpPunishments")
                        .HasForeignKey("ContractTypeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpPunishments")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.OrgDepartment", "IssuingOrgDepartment")
                        .WithMany("EmpPunishmentIssuingDepartments")
                        .HasForeignKey("IssuingOrgDepartmentId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.OrgDepartment", "OrderOrgDepartment")
                        .WithMany("EmpPunishmentOrderDepartments")
                        .HasForeignKey("OrderOrgDepartmentId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.PunishmentType", "PunishmentType")
                        .WithMany("EmpPunishments")
                        .HasForeignKey("PunishmentTypeId")
                        .IsRequired();

                    b.Navigation("ContractType");

                    b.Navigation("Employee");

                    b.Navigation("IssuingOrgDepartment");

                    b.Navigation("OrderOrgDepartment");

                    b.Navigation("PunishmentType");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpQualification", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.Country", "Country")
                        .WithMany("EmpQualifications")
                        .HasForeignKey("CountryId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.DegreesAuthority", "DegreesAuthority")
                        .WithMany("EmpQualifications")
                        .HasForeignKey("DegreesAuthorityId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpQualifications")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.Qualification", "Qualification")
                        .WithMany("EmpQualifications")
                        .HasForeignKey("QualificationId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.Specialization", "Specialization")
                        .WithMany("EmpQualifications")
                        .HasForeignKey("SpecializationId")
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("DegreesAuthority");

                    b.Navigation("Employee");

                    b.Navigation("Qualification");

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpRelinquishment", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.ModificationContractType", "ContractType")
                        .WithMany("EmpRelinquishments")
                        .HasForeignKey("ContractTypeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpRelinquishments")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.RelinquishmentReason", "RelinquishmentReason")
                        .WithMany("EmpRelinquishments")
                        .HasForeignKey("RelinquishmentReasonId")
                        .IsRequired();

                    b.Navigation("ContractType");

                    b.Navigation("Employee");

                    b.Navigation("RelinquishmentReason");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpReward", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.ModificationContractType", "ContractType")
                        .WithMany("EmpRewards")
                        .HasForeignKey("ContractTypeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpRewards")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.FinancialIndicatorType", "FinancialIndicatorType")
                        .WithMany("EmpRewards")
                        .HasForeignKey("FinancialIndicatorTypeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.OrgDepartment", "OrgDepartment")
                        .WithMany("EmpRewards")
                        .HasForeignKey("OrgDepartmentId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.RewardType", "RewardType")
                        .WithMany("EmpRewards")
                        .HasForeignKey("RewardTypeId")
                        .IsRequired();

                    b.Navigation("ContractType");

                    b.Navigation("Employee");

                    b.Navigation("FinancialIndicatorType");

                    b.Navigation("OrgDepartment");

                    b.Navigation("RewardType");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpTrainingCourse", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.ModificationContractType", "ContractType")
                        .WithMany("EmpTrainingCourses")
                        .HasForeignKey("ContractTypeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpTrainingCourses")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.Navigation("ContractType");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpVacation", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.ModificationContractType", "ContractType")
                        .WithMany("EmpVacationContractTypes")
                        .HasForeignKey("ContractTypeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpVacations")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.FinancialImpact", "FinancialImpact")
                        .WithMany("EmpVacations")
                        .HasForeignKey("FinancialImpactId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.ForcedVacationType", "ForcedVacationType")
                        .WithMany("EmpVacations")
                        .HasForeignKey("ForcedVacationTypeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.ModificationContractType", "ModificationContractType")
                        .WithMany("EmpVacationModificationContractTypes")
                        .HasForeignKey("ModificationContractTypeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Constants.VacationType", "VacationType")
                        .WithMany("EmpVacations")
                        .HasForeignKey("VacationTypeId")
                        .IsRequired();

                    b.Navigation("ContractType");

                    b.Navigation("Employee");

                    b.Navigation("FinancialImpact");

                    b.Navigation("ForcedVacationType");

                    b.Navigation("ModificationContractType");

                    b.Navigation("VacationType");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpWorkInjury", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpWorkInjuries")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpWorkPlace", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Constants.ModificationContractType", "ContractType")
                        .WithMany("EmpWorkPlaces")
                        .HasForeignKey("ContractTypeId")
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", "Employee")
                        .WithMany("EmpWorkPlaces")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.Navigation("ContractType");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Identity.RolePermissions", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Identity.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hiastHRApi.Domain.Entities.Identity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Identity.User", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Identity.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Identity.UserProfile", b =>
                {
                    b.HasOne("hiastHRApi.Domain.Entities.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.BloodGroup", b =>
                {
                    b.Navigation("EmpPersonalInfos");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.ChildStatus", b =>
                {
                    b.Navigation("EmpChildren");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.City", b =>
                {
                    b.Navigation("EmpDeputations");

                    b.Navigation("EmpPersonalInfos");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("EmpDeputations");

                    b.Navigation("EmpQualifications");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.DegreesAuthority", b =>
                {
                    b.Navigation("EmpQualifications");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Department", b =>
                {
                    b.Navigation("SubDepartments");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.DeputationObjective", b =>
                {
                    b.Navigation("EmpDeputations");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.DeputationStatus", b =>
                {
                    b.Navigation("EmpDeputations");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.DeputationType", b =>
                {
                    b.Navigation("EmpDeputations");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.DisabilityType", b =>
                {
                    b.Navigation("EmpAppointmentStatuses");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.DocType", b =>
                {
                    b.Navigation("EmpDocs");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.EmploymentStatusType", b =>
                {
                    b.Navigation("EmpPersonalInfos");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.EvaluationGrade", b =>
                {
                    b.Navigation("EmpPerformanceEvaluations");

                    b.Navigation("EmpPromotions");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.EvaluationQuarter", b =>
                {
                    b.Navigation("EmpPerformanceEvaluations");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.ExperienceType", b =>
                {
                    b.Navigation("EmpExperiences");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.FinancialImpact", b =>
                {
                    b.Navigation("EmpVacations");

                    b.Navigation("PunishmentTypes");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.FinancialIndicatorType", b =>
                {
                    b.Navigation("EmpRewards");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.ForcedVacationType", b =>
                {
                    b.Navigation("EmpVacations");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Gender", b =>
                {
                    b.Navigation("EmpChildren");

                    b.Navigation("EmpPartners");

                    b.Navigation("EmpPersonalInfos");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.HealthyStatus", b =>
                {
                    b.Navigation("EmpAppointmentStatuses");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.InsuranceSystem", b =>
                {
                    b.Navigation("EmpAppointmentStatuses");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.JobCategory", b =>
                {
                    b.Navigation("EmpAppointmentStatuses");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.JobChangeReason", b =>
                {
                    b.Navigation("EmpEmploymentChanges");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.JobTitle", b =>
                {
                    b.Navigation("EmpEmploymentChanges");

                    b.Navigation("EmpPartners");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Language", b =>
                {
                    b.Navigation("EmpLanguages");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.LanguageLevel", b =>
                {
                    b.Navigation("EmpLanguages");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Law", b =>
                {
                    b.Navigation("EmpAppointmentStatuses");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.MaritalStatus", b =>
                {
                    b.Navigation("EmpPersonalInfos");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.MilitaryRank", b =>
                {
                    b.Navigation("EmpMilitaryServices");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.MilitarySpecialization", b =>
                {
                    b.Navigation("EmpMilitaryServices");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.ModificationContractType", b =>
                {
                    b.Navigation("EmpAppointmentStatusAppointmentContractTypes");

                    b.Navigation("EmpAppointmentStatusModificationContractTypes");

                    b.Navigation("EmpAssignments");

                    b.Navigation("EmpEmploymentChanges");

                    b.Navigation("EmpEmploymentStatuses");

                    b.Navigation("EmpPunishments");

                    b.Navigation("EmpRelinquishments");

                    b.Navigation("EmpRewards");

                    b.Navigation("EmpTrainingCourses");

                    b.Navigation("EmpVacationContractTypes");

                    b.Navigation("EmpVacationModificationContractTypes");

                    b.Navigation("EmpWorkPlaces");

                    b.Navigation("JobChangeReasons");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Nationality", b =>
                {
                    b.Navigation("EmpPartners");

                    b.Navigation("EmpPersonalInfos");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.OccurrencePartnerType", b =>
                {
                    b.Navigation("EmpPartners");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.OrgDepartment", b =>
                {
                    b.Navigation("Branches");

                    b.Navigation("EmpPunishmentIssuingDepartments");

                    b.Navigation("EmpPunishmentOrderDepartments");

                    b.Navigation("EmpRewards");

                    b.Navigation("SubOrgDepartments");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.PromotionPercentage", b =>
                {
                    b.Navigation("EmpPromotions");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.PunishmentType", b =>
                {
                    b.Navigation("EmpPunishments");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Qualification", b =>
                {
                    b.Navigation("EmpQualifications");

                    b.Navigation("Specializations");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.RelinquishmentReason", b =>
                {
                    b.Navigation("EmpRelinquishments");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.RewardType", b =>
                {
                    b.Navigation("EmpRewards");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.Specialization", b =>
                {
                    b.Navigation("EmpQualifications");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.StartingType", b =>
                {
                    b.Navigation("EmpAppointmentStatuses");

                    b.Navigation("EmpEmploymentStatuses");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.University", b =>
                {
                    b.Navigation("EmpDeputations");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Constants.VacationType", b =>
                {
                    b.Navigation("EmpVacations");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Employee.EmpPersonalInfo", b =>
                {
                    b.Navigation("EmpAppointmentStatuses");

                    b.Navigation("EmpAssignments");

                    b.Navigation("EmpChildren");

                    b.Navigation("EmpDeputations");

                    b.Navigation("EmpEmploymentChanges");

                    b.Navigation("EmpEmploymentStatuses");

                    b.Navigation("EmpExperiences");

                    b.Navigation("EmpLanguages");

                    b.Navigation("EmpMilitaryServiceCohorts");

                    b.Navigation("EmpMilitaryServiceSuspensions");

                    b.Navigation("EmpMilitaryServices");

                    b.Navigation("EmpPartners");

                    b.Navigation("EmpPerformanceEvaluations");

                    b.Navigation("EmpPromotions");

                    b.Navigation("EmpPunishments");

                    b.Navigation("EmpQualifications");

                    b.Navigation("EmpRelinquishments");

                    b.Navigation("EmpRewards");

                    b.Navigation("EmpTrainingCourses");

                    b.Navigation("EmpVacations");

                    b.Navigation("EmpWorkInjuries");

                    b.Navigation("EmpWorkPlaces");
                });

            modelBuilder.Entity("hiastHRApi.Domain.Entities.Identity.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
